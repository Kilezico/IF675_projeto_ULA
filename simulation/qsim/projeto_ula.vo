// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "05/15/2024 16:08:20"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module decimal_sep_5bits (
	Carry,
	A,
	digito);
output 	[3:0] Carry;
input 	[4:0] A;
output 	[3:0] digito;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Carry[3]~output_o ;
wire \Carry[2]~output_o ;
wire \Carry[1]~output_o ;
wire \Carry[0]~output_o ;
wire \digito[3]~output_o ;
wire \digito[2]~output_o ;
wire \digito[1]~output_o ;
wire \digito[0]~output_o ;
wire \A[4]~input_o ;
wire \A[3]~input_o ;
wire \A[2]~input_o ;
wire \instor[1]~0_combout ;
wire \A[1]~input_o ;
wire \instor[0]~1_combout ;
wire \inst1|inst6|inst4|inst~0_combout ;
wire \inst1|inst5|inst4|inst~combout ;
wire \inst1|inst4|inst|inst~0_combout ;
wire \A[0]~input_o ;


cycloneive_io_obuf \Carry[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Carry[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Carry[3]~output .bus_hold = "false";
defparam \Carry[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Carry[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Carry[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Carry[2]~output .bus_hold = "false";
defparam \Carry[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Carry[1]~output (
	.i(\instor[1]~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Carry[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Carry[1]~output .bus_hold = "false";
defparam \Carry[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Carry[0]~output (
	.i(\instor[0]~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Carry[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Carry[0]~output .bus_hold = "false";
defparam \Carry[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \digito[3]~output (
	.i(!\inst1|inst6|inst4|inst~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\digito[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \digito[3]~output .bus_hold = "false";
defparam \digito[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \digito[2]~output (
	.i(!\inst1|inst5|inst4|inst~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\digito[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \digito[2]~output .bus_hold = "false";
defparam \digito[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \digito[1]~output (
	.i(\inst1|inst4|inst|inst~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\digito[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \digito[1]~output .bus_hold = "false";
defparam \digito[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \digito[0]~output (
	.i(\A[0]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\digito[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \digito[0]~output .bus_hold = "false";
defparam \digito[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \A[4]~input (
	.i(A[4]),
	.ibar(gnd),
	.o(\A[4]~input_o ));
// synopsys translate_off
defparam \A[4]~input .bus_hold = "false";
defparam \A[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \instor[1]~0 (
// Equation(s):
// \instor[1]~0_combout  = (\A[4]~input_o  & ((\A[3]~input_o ) # (\A[2]~input_o )))

	.dataa(\A[4]~input_o ),
	.datab(\A[3]~input_o ),
	.datac(\A[2]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\instor[1]~0_combout ),
	.cout());
// synopsys translate_off
defparam \instor[1]~0 .lut_mask = 16'hA8A8;
defparam \instor[1]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \instor[0]~1 (
// Equation(s):
// \instor[0]~1_combout  = (\A[3]~input_o  & ((\A[1]~input_o  & ((\A[2]~input_o ) # (!\A[4]~input_o ))) # (!\A[1]~input_o  & (\A[2]~input_o  & !\A[4]~input_o )))) # (!\A[3]~input_o  & (((!\A[2]~input_o  & \A[4]~input_o ))))

	.dataa(\A[1]~input_o ),
	.datab(\A[3]~input_o ),
	.datac(\A[2]~input_o ),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\instor[0]~1_combout ),
	.cout());
// synopsys translate_off
defparam \instor[0]~1 .lut_mask = 16'h83C8;
defparam \instor[0]~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst1|inst6|inst4|inst~0 (
// Equation(s):
// \inst1|inst6|inst4|inst~0_combout  = (\A[1]~input_o  & ((\A[2]~input_o ) # ((\A[3]~input_o ) # (!\A[4]~input_o )))) # (!\A[1]~input_o  & ((\A[2]~input_o  $ (\A[4]~input_o )) # (!\A[3]~input_o )))

	.dataa(\A[1]~input_o ),
	.datab(\A[2]~input_o ),
	.datac(\A[3]~input_o ),
	.datad(\A[4]~input_o ),
	.cin(gnd),
	.combout(\inst1|inst6|inst4|inst~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|inst6|inst4|inst~0 .lut_mask = 16'hBDEF;
defparam \inst1|inst6|inst4|inst~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst1|inst5|inst4|inst (
// Equation(s):
// \inst1|inst5|inst4|inst~combout  = (\A[4]~input_o  & ((\A[2]~input_o ) # ((!\A[3]~input_o  & \A[1]~input_o )))) # (!\A[4]~input_o  & (((\A[3]~input_o  & !\A[1]~input_o )) # (!\A[2]~input_o )))

	.dataa(\A[4]~input_o ),
	.datab(\A[2]~input_o ),
	.datac(\A[3]~input_o ),
	.datad(\A[1]~input_o ),
	.cin(gnd),
	.combout(\inst1|inst5|inst4|inst~combout ),
	.cout());
// synopsys translate_off
defparam \inst1|inst5|inst4|inst .lut_mask = 16'h9BD9;
defparam \inst1|inst5|inst4|inst .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst1|inst4|inst|inst~0 (
// Equation(s):
// \inst1|inst4|inst|inst~0_combout  = (\A[1]~input_o  & (\A[3]~input_o  $ (((\A[2]~input_o ) # (!\A[4]~input_o ))))) # (!\A[1]~input_o  & ((\A[4]~input_o  & (!\A[2]~input_o  & !\A[3]~input_o )) # (!\A[4]~input_o  & (\A[2]~input_o  & \A[3]~input_o ))))

	.dataa(\A[1]~input_o ),
	.datab(\A[4]~input_o ),
	.datac(\A[2]~input_o ),
	.datad(\A[3]~input_o ),
	.cin(gnd),
	.combout(\inst1|inst4|inst|inst~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|inst4|inst|inst~0 .lut_mask = 16'h18A6;
defparam \inst1|inst4|inst|inst~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

assign Carry[3] = \Carry[3]~output_o ;

assign Carry[2] = \Carry[2]~output_o ;

assign Carry[1] = \Carry[1]~output_o ;

assign Carry[0] = \Carry[0]~output_o ;

assign digito[3] = \digito[3]~output_o ;

assign digito[2] = \digito[2]~output_o ;

assign digito[1] = \digito[1]~output_o ;

assign digito[0] = \digito[0]~output_o ;

endmodule
